blueprint:
  name: Room Thermostat Temperature Control
  description: >
    Adjust the thermostat setpoint based on external temperature, room schedules,
    specific conditions, and room occupancy status with configurable occupancy detection and time-based offsets.
  domain: automation
  input:
    thermostat_inputs:
      name: '# Thermostat Inputs'
      collapsed: false
      input:
        thermostat:
          name: Target Thermostat
          description: Select the thermostat to control.
          selector:
            entity:
              integration: ramses_cc
              domain: climate
        scheduled_setpoint:
          name: Scheduled Setpoint Helper
          description: Input helper to retrieve the scheduled setpoint temperature.
          selector:
            entity:
              domain: sensor
              device_class: temperature
        external_temperature:
          name: External Temperature Sensor
          description: Select the external temperature sensor.
          selector:
            entity:
              domain: sensor
              device_class: temperature
        delta_above_15:
          name: Delta for >15°C
          description: Adjustment to setpoint when external temperature is above 15°C.
          selector:
            number:
              min: -3
              max: 3
              step: 0.5
        delta_above_10:
          name: Delta for >10°C
          description: Adjustment to setpoint when external temperature is between 10°C and 15°C.
          selector:
            number:
              min: -3
              max: 3
              step: 0.5
        delta_10_to_5:
          name: Delta for 10°C to 5°C
          description: Adjustment to setpoint when external temperature is between 10°C and 5°C.
          selector:
            number:
              min: -3
              max: 3
              step: 0.5
        delta_5_to_0:
          name: Delta for 5°C to 0°C
          description: Adjustment to setpoint when external temperature is between 5°C and 0°C.
          selector:
            number:
              min: -3
              max: 3
              step: 0.5
        delta_below_0:
          name: Delta for <0°C
          description: Adjustment to setpoint when external temperature is below 0°C.
          selector:
            number:
              min: -3
              max: 3
              step: 0.5
    occupancy_inputs:
      name: '# Occupancy Inputs'
      collapsed: false
      input:
        room_occupancy_sensor:
          name: Room Occupancy Sensor
          description: Select the room occupancy sensor.
          selector:
            entity:
              domain: binary_sensor
        unoccupied_duration:
          name: Unoccupied Duration
          description: How long in minutes the room must be unoccupied before the offset is applied.
          selector:
            number:
              min: 0
              max: 59
              step: 1
        reoccupied_duration:
          name: Reoccupied Duration
          description: How long in minutes the room must remain occupied to cancel the unoccupied state.
          selector:
            number:
              min: 0
              max: 5
              step: 1
        weekday_morning_offset:
          name: Weekday Morning Offset
          description: Unoccupied offset for weekdays during Morning (06:30 - 12:00).
          selector:
            number:
              min: -5
              max: 0
              step: 0.5
        weekday_afternoon_offset:
          name: Weekday Afternoon Offset
          description: Unoccupied offset for weekdays during Afternoon (12:00 - 17:00).
          selector:
            number:
              min: -5
              max: 0
              step: 0.5
        weekday_evening_offset:
          name: Weekday Evening Offset
          description: Unoccupied offset for weekdays during Evening (17:00 - 22:00).
          selector:
            number:
              min: -5
              max: 0
              step: 0.5
        weekend_morning_offset:
          name: Weekend Morning Offset
          description: Unoccupied offset for weekends during Morning (06:30 - 12:00).
          selector:
            number:
              min: -5
              max: 0
              step: 0.5
        weekend_afternoon_offset:
          name: Weekend Afternoon Offset
          description: Unoccupied offset for weekends during Afternoon (12:00 - 17:00).
          selector:
            number:
              min: -5
              max: 0
              step: 0.5
        weekend_evening_offset:
          name: Weekend Evening Offset
          description: Unoccupied offset for weekends during Evening (17:00 - 22:00).
          selector:
            number:
              min: -5
              max: 0
              step: 0.5

mode: restart

trigger:
  - platform: time_pattern
    minutes: "/5"

variables:
  external_temperature_var: !input external_temperature
  scheduled_setpoint_var: !input scheduled_setpoint
  occupancy_sensor: !input room_occupancy_sensor
  unoccupied_duration: !input unoccupied_duration
  reoccupied_duration: !input reoccupied_duration
  weekday_morning_offset: !input weekday_morning_offset
  weekday_afternoon_offset: !input weekday_afternoon_offset
  weekday_evening_offset: !input weekday_evening_offset
  weekend_morning_offset: !input weekend_morning_offset
  weekend_afternoon_offset: !input weekend_afternoon_offset
  weekend_evening_offset: !input weekend_evening_offset
  current_temperature: "{{ states(external_temperature_var) | float }}"
  scheduled_setpoint: "{{ states(scheduled_setpoint_var) | float }}"
  is_weekend: "{{ now().weekday() in [5, 6] }}"
  time_period: >
    {% if now().hour >= 6 and now().minute >= 30 and now().hour < 12 %}
      morning
    {% elif now().hour >= 12 and now().hour < 17 %}
      afternoon
    {% elif now().hour >= 17 and now().hour < 22 %}
      evening
    {% else %}
      none
    {% endif %}
  unoccupied_offset: >
    {% if time_period == 'morning' %}
      {% if is_weekend %}
        {{ weekend_morning_offset }}
      {% else %}
        {{ weekday_morning_offset }}
      {% endif %}
    {% elif time_period == 'afternoon' %}
      {% if is_weekend %}
        {{ weekend_afternoon_offset }}
      {% else %}
        {{ weekday_afternoon_offset }}
      {% endif %}
    {% elif time_period == 'evening' %}
      {% if is_weekend %}
        {{ weekend_evening_offset }}
      {% else %}
        {{ weekday_evening_offset }}
      {% endif %}
    {% else %}
      0
    {% endif %}
  is_unoccupied: >
    {% if is_state(occupancy_sensor, 'off') and 
       (as_timestamp(now()) - as_timestamp(states[occupancy_sensor].last_changed)) / 60 >= unoccupied_duration %}
      true
    {% elif is_state(occupancy_sensor, 'on') and 
         (as_timestamp(now()) - as_timestamp(states[occupancy_sensor].last_changed)) / 60 < reoccupied_duration %}
      true
    {% else %}
      false
    {% endif %}

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ current_temperature > 15 }}"
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: !input thermostat
            data:
              temperature: >
                {% if is_unoccupied %}
                  {{ scheduled_setpoint + delta_above_15 + unoccupied_offset }}
                {% else %}
                  {{ scheduled_setpoint + delta_above_15 }}
                {% endif %}
              hvac_mode: "heat"
      - conditions:
          - condition: template
            value_template: "{{ current_temperature > 10 and current_temperature <= 15 }}"
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: !input thermostat
            data:
              temperature: >
                {% if is_unoccupied %}
                  {{ scheduled_setpoint + delta_above_10 + unoccupied_offset }}
                {% else %}
                  {{ scheduled_setpoint + delta_above_10 }}
                {% endif %}
              hvac_mode: "heat"
      - conditions:
          - condition: template
            value_template: "{{ current_temperature > 5 and current_temperature <= 10 }}"
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: !input thermostat
            data:
              temperature: >
                {% if is_unoccupied %}
                  {{ scheduled_setpoint + delta_10_to_5 + unoccupied_offset }}
                {% else %}
                  {{ scheduled_setpoint + delta_10_to_5 }}
                {% endif %}
              hvac_mode: "heat"
      - conditions:
          - condition: template
            value_template: "{{ current_temperature > 0 and current_temperature <= 5 }}"
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: !input thermostat
            data:
              temperature: >
                {% if is_unoccupied %}
                  {{ scheduled_setpoint + delta_5_to_0 + unoccupied_offset }}
                {% else %}
                  {{ scheduled_setpoint + delta_5_to_0 }}
                {% endif %}
              hvac_mode: "heat"
      - conditions:
          - condition: template
            value_template: "{{ current_temperature <= 0 }}"
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: !input thermostat
            data:
              temperature: >
                {% if is_unoccupied %}
                  {{ scheduled_setpoint + delta_below_0 + unoccupied_offset }}
                {% else %}
                  {{ scheduled_setpoint + delta_below_0 }}
                {% endif %}
              hvac_mode: "heat"
  - delay: "00:15:30"
  - service: climate.set_temperature
    target:
      entity_id: !input thermostat
    data:
      temperature: "{{ scheduled_setpoint }}"
