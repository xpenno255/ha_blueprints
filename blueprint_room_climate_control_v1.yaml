blueprint:
  name: Room Thermostat Temperature Control v2.21
  description: >
    Adjust the thermostat setpoint based on external temperature, room schedules,
    specific conditions, and room occupancy status with configurable occupancy detection and time-based offsets.
  domain: automation
  input:
    thermostat_inputs:
      name: '# Thermostat Inputs'
      collapsed: false
      input:
        thermostat:
          name: Target Thermostat
          description: Select the thermostat to control.
          selector:
            entity:
              integration: ramses_cc
              domain: climate
        scheduled_setpoint:
          name: Scheduled Setpoint Helper
          description: Input helper to retrieve the scheduled setpoint temperature.
          selector:
            entity:
              domain: sensor
              device_class: temperature
        external_temperature:
          name: External Temperature Sensor
          description: Select the external temperature sensor.
          selector:
            entity:
              domain: sensor
              device_class: temperature
          default: sensor.accuweather_home_wind_chill_temperature
        delta_above_15:
          name: Delta for >15°C
          description: Adjustment to setpoint when external temperature is above 15°C.
          selector:
            number:
              min: -3
              max: 3
              step: 0.5
          default: 0.5
        delta_above_10:
          name: Delta for >10°C
          description: Adjustment to setpoint when external temperature is between 10°C and 15°C.
          selector:
            number:
              min: -3
              max: 3
              step: 0.5
          default: 1
        delta_10_to_5:
          name: Delta for 10°C to 5°C
          description: Adjustment to setpoint when external temperature is between 10°C and 5°C.
          selector:
            number:
              min: -3
              max: 3
              step: 0.5
          default: 1.5
        delta_5_to_0:
          name: Delta for 5°C to 2°C
          description: Adjustment to setpoint when external temperature is between 5°C and 0°C.
          selector:
            number:
              min: -3
              max: 3
              step: 0.5
          default: 2
        delta_below_0:
          name: Delta for < 2°C
          description: Adjustment to setpoint when external temperature is below 0°C.
          selector:
            number:
              min: -3
              max: 3
              step: 0.5
          default: 2.5
    occupancy_inputs:
      name: '# Occupancy Inputs'
      collapsed: false
      input:
        room_occupancy_sensor:
          name: Room Occupancy Sensor
          description: Select the room occupancy sensor.
          selector:
            entity:
              domain: binary_sensor
        unoccupied_duration:
          name: Unoccupied Duration
          description: How long in minutes the room must be unoccupied before the offset is applied.
          selector:
            number:
              min: 0
              max: 59
              step: 1
          default: 10
        reoccupied_duration:
          name: Reoccupied Duration
          description: How long in minutes the room must remain occupied to cancel the unoccupied state.
          selector:
            number:
              min: 0
              max: 5
              step: 1
          default: 2
        weekday_morning_offset:
          name: Weekday Morning Offset
          description: Unoccupied offset for weekdays during Morning (06:30 - 12:00).
          selector:
            number:
              min: -5
              max: 0
              step: 0.5
          default: -0.5
        weekday_afternoon_offset:
          name: Weekday Afternoon Offset
          description: Unoccupied offset for weekdays during Afternoon (12:00 - 16:30).
          selector:
            number:
              min: -5
              max: 0
              step: 0.5
          default: -0.5
        weekday_evening_offset:
          name: Weekday Evening Offset
          description: Unoccupied offset for weekdays during Evening (16:30 - 22:00).
          selector:
            number:
              min: -5
              max: 0
              step: 0.5
          default: -0.5
        weekend_morning_offset:
          name: Weekend Morning Offset
          description: Unoccupied offset for weekends during Morning (06:30 - 12:00).
          selector:
            number:
              min: -5
              max: 0
              step: 0.5
          default: -0.5
        weekend_afternoon_offset:
          name: Weekend Afternoon Offset
          description: Unoccupied offset for weekends during Afternoon (12:00 - 16:30).
          selector:
            number:
              min: -5
              max: 0
              step: 0.5
          default: -0.5
        weekend_evening_offset:
          name: Weekend Evening Offset
          description: Unoccupied offset for weekends during Evening (16:30 - 22:00).
          selector:
            number:
              min: -5
              max: 0
              step: 0.5
          default: -0.5
    misc_inputs:
      name: '# Misc Inputs'
      collapsed: false
      input:
        automation_delay:
          name: Automation Delay
          description: Delays the automation by a number of seconds so they dont all fire at the same time
          selector:
            number:
              min: 0
              max: 20
              step: 1
          default: 0

mode: restart

trigger:
  - platform: time_pattern
    minutes: "/1"

variables:
  thermostat: !input thermostat
  external_temperature_var: !input external_temperature
  scheduled_setpoint_var: !input scheduled_setpoint
  delta_above_15: !input delta_above_15
  delta_above_10: !input delta_above_10
  delta_10_to_5: !input delta_10_to_5
  delta_5_to_0: !input delta_5_to_0
  delta_below_0: !input delta_below_0
  occupancy_sensor: !input room_occupancy_sensor
  unoccupied_duration: !input unoccupied_duration
  reoccupied_duration: !input reoccupied_duration
  weekday_morning_offset: !input weekday_morning_offset
  weekday_afternoon_offset: !input weekday_afternoon_offset
  weekday_evening_offset: !input weekday_evening_offset
  weekend_morning_offset: !input weekend_morning_offset
  weekend_afternoon_offset: !input weekend_afternoon_offset
  weekend_evening_offset: !input weekend_evening_offset
  current_temperature: "{{ states(external_temperature_var) | float }}"
  scheduled_setpoint: "{{ states(scheduled_setpoint_var) | float }}"
  thermostat_name: "{{ state_attr(thermostat, 'friendly_name') }}"
  thermostat_currentsetpoint: "{{ state_attr(thermostat, 'temperature') }}"
  is_weekend: "{{ now().weekday() in [5, 6] }}"
  time_period: >
    {% if now().hour >= 6 and now().minute >= 30 and now().hour < 12 %}
      morning
    {% elif now().hour >= 12 and (now().hour < 16 or (now().hour == 16 and now().minute < 30)) %}
      afternoon
    {% elif now().hour > 16 or (now().hour == 16 and now().minute >= 30) %}
      evening
    {% else %}
      none
    {% endif %}
  unoccupied_offset: >
    {% if time_period == 'morning' %}
      {% if is_weekend %}
        {{ weekend_morning_offset }}
      {% else %}
        {{ weekday_morning_offset }}
      {% endif %}
    {% elif time_period == 'afternoon' %}
      {% if is_weekend %}
        {{ weekend_afternoon_offset }}
      {% else %}
        {{ weekday_afternoon_offset }}
      {% endif %}
    {% elif time_period == 'evening' %}
      {% if is_weekend %}
        {{ weekend_evening_offset }}
      {% else %}
        {{ weekday_evening_offset }}
      {% endif %}
    {% else %}
      0
    {% endif %}
  is_unoccupied: >
    {% if states[occupancy_sensor] is not none and 
         is_state(occupancy_sensor, 'off') and 
         (as_timestamp(now()) - (as_timestamp(states[occupancy_sensor].last_changed) or as_timestamp(now()))) / 60 >= unoccupied_duration %}
      true
    {% else %}
      false
    {% endif %}
  automation_delay: !input automation_delay

condition:
  - condition: state
    entity_id: input_boolean.holiday_mode
    state: "off"

action:
  - condition: time
    before: "22:30:00"
    after: "06:30:00"
  - delay:
      seconds: "{{ automation_delay | int }}"
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ current_temperature > 15 }}"
        sequence:
          - condition: template
            value_template: "{{ state_attr(thermostat, 'temperature') != (scheduled_setpoint + delta_above_15 + (unoccupied_offset if is_unoccupied | string == 'true' else 0)) }}"
          - service: climate.set_temperature
            target:
              entity_id: !input thermostat
            data:
              temperature: >
                {{ scheduled_setpoint + delta_above_15 + (unoccupied_offset if is_unoccupied | string == 'true' else 0) }}
              hvac_mode: "heat"
          - service: system_log.write
            data:
              message: >
                Calculated setpoint for thermostat {{ thermostat_name }}:
                {{ scheduled_setpoint + delta_above_15 + (unoccupied_offset if is_unoccupied | string == 'true' else 0) }}°C from {{ thermostat_currentsetpoint }}°C
                (External Temp: {{ current_temperature }}°C)
                (scheduled setpoint: {{ scheduled_setpoint }}°C)
                (Room Unoccupied: {{ is_unoccupied }})
              level: warning              
      - conditions:
          - condition: template
            value_template: "{{ current_temperature > 10 and current_temperature <= 15 }}"
        sequence:
          - condition: template
            value_template: "{{ state_attr(thermostat, 'temperature') != (scheduled_setpoint + delta_above_10 + (unoccupied_offset if is_unoccupied | string == 'true' else 0)) }}"
          - service: climate.set_temperature
            target:
              entity_id: !input thermostat
            data:
              temperature: >
                {{ scheduled_setpoint + delta_above_10 + (unoccupied_offset if is_unoccupied | string == 'true' else 0) }}
              hvac_mode: "heat"
          - service: system_log.write
            data:
              message: >
                Calculated setpoint for thermostat {{ thermostat_name }}:
                {{ scheduled_setpoint + delta_above_10 + (unoccupied_offset if is_unoccupied | string == 'true' else 0) }}°C from {{ thermostat_currentsetpoint }}°C
                (External Temp: {{ current_temperature }}°C)
                (scheduled setpoint: {{ scheduled_setpoint }}°C)
                (Room Unoccupied: {{ is_unoccupied }})
              level: warning
      - conditions:
          - condition: template
            value_template: "{{ current_temperature > 5 and current_temperature <= 10 }}"
        sequence:
          - condition: template
            value_template: "{{ state_attr(thermostat, 'temperature') != (scheduled_setpoint + delta_10_to_5 + (unoccupied_offset if is_unoccupied | string == 'true' else 0)) }}"
          - service: climate.set_temperature
            target:
              entity_id: !input thermostat
            data:
              temperature: >
                {{ scheduled_setpoint + delta_10_to_5 + (unoccupied_offset if is_unoccupied | string == 'true' else 0) }}
              hvac_mode: "heat"
          - service: system_log.write
            data:
              message: >
                Calculated setpoint for thermostat {{ thermostat_name }}:
                {{ scheduled_setpoint + delta_10_to_5 + (unoccupied_offset if is_unoccupied | string == 'true' else 0) }}°C from {{ thermostat_currentsetpoint }}°C
                (External Temp: {{ current_temperature }}°C)
                (scheduled setpoint: {{ scheduled_setpoint }}°C)
                (Room Unoccupied: {{ is_unoccupied }})
              level: warning
      - conditions:
          - condition: template
            value_template: "{{ current_temperature > 0 and current_temperature <= 5 }}"
        sequence:
          - condition: template
            value_template: "{{ state_attr(thermostat, 'temperature') != (scheduled_setpoint + delta_5_to_0 + (unoccupied_offset if is_unoccupied | string == 'true' else 0)) }}"
          - service: climate.set_temperature
            target:
              entity_id: !input thermostat
            data:
              temperature: >
                {{ scheduled_setpoint + delta_5_to_0 + (unoccupied_offset if is_unoccupied | string == 'true' else 0) }}
              hvac_mode: "heat"
          - service: system_log.write
            data:
              message: >
                Calculated setpoint for thermostat {{ thermostat_name }}:
                {{ scheduled_setpoint + delta_5_to_0 + (unoccupied_offset if is_unoccupied | string == 'true' else 0) }}°C from {{ thermostat_currentsetpoint }}°C
                (External Temp: {{ current_temperature }}°C)
                (scheduled setpoint: {{ scheduled_setpoint }}°C)
                (Room Unoccupied: {{ is_unoccupied }})
              level: warning             
      - conditions:
          - condition: template
            value_template: "{{ current_temperature <= 0 }}"
        sequence:
          - condition: template
            value_template: "{{ state_attr(thermostat, 'temperature') != (scheduled_setpoint + delta_below_0 + (unoccupied_offset if is_unoccupied | string == 'true' else 0)) }}"
          - service: climate.set_temperature
            target:
              entity_id: !input thermostat
            data:
              temperature: >
                {{ scheduled_setpoint + delta_below_0 + (unoccupied_offset if is_unoccupied | string == 'true' else 0) }}
              hvac_mode: "heat"
          - service: system_log.write
            data:
              message: >
                Calculated setpoint for thermostat {{ thermostat_name }}:
                {{ scheduled_setpoint + delta_below_0 + (unoccupied_offset if is_unoccupied | string == 'true' else 0) }}°C from {{ thermostat_currentsetpoint }}°C
                (External Temp: {{ current_temperature }}°C)
                (scheduled setpoint: {{ scheduled_setpoint }}°C)
                (delta: {{ delta_below_0 }}°C)
                (Unoccupied Offset: {{ unoccupied_offset if is_unoccupied else 0 }}°C)
                (Room Unoccupied: {{ is_unoccupied }})
              level: warning
  - delay: "00:10:00"
  - service: climate.set_temperature
    target:
      entity_id: !input thermostat
    data:
      temperature: "{{ scheduled_setpoint }}"
